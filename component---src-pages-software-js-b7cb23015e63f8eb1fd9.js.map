{"version":3,"file":"component---src-pages-software-js-b7cb23015e63f8eb1fd9.js","mappings":"2KA0DA,IApDkB,IAAyB,IAAD,MAAvB,KAAEA,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACzCC,EAAQN,EAAKO,kBAAkBC,MAErC,GAAqB,IAAjBF,EAAMG,OACR,MAAM,IAAIC,MAAM,mBAGlB,OACE,gBAAC,IAAM,CAACT,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,MACJ,sBAAIS,MAAO,CAAEC,UAAU,SACpBN,EAAMO,QAAOC,IAASA,EAAKC,YAAYC,QACrCC,KAAIH,IACH,MAAMT,EAAQS,EAAKC,YAAYV,OAASS,EAAKI,OAAOC,KAC9CC,EAuClB,SAA6BD,GAC3B,IAAKA,GAAwB,iBAATA,GAA4C,IAAvBA,EAAKE,OAAOZ,OACnD,OAAO,KAGT,OAAOU,EAAKG,MAAM,KAAK,EACzB,CA7C6BC,CAAoBT,EAAKI,OAAOC,MAEjD,OACE,sBAAIK,IAAKV,EAAKI,OAAOC,MACnB,2BACEM,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIT,EAAUK,UAAU,YAC3BL,GAEH,0BACE,gBAAC,EAAAQ,KAAI,CAACC,GAAIf,EAAKI,OAAOC,KAAMW,SAAS,OACnC,wBAAMA,SAAS,YAAYzB,KAG/B,6BAAQS,EAAKC,YAAYgB,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQnB,EAAKC,YAAYmB,aAAepB,EAAKqB,SAE/CL,SAAS,kBAIZ,KAIN,C,mCChCb,IApBsB,IAAkC,IAAjC,SAAEV,EAAQ,KAAEpB,KAASoC,GAAM,EAC9C,IAAKhB,EACD,MAAM,IAAIV,MAAM,iCAQpB,OALAV,EAAKO,kBAAkBC,MAW3B,SAA+BF,EAAOc,GAClC,OAAOd,EAAMO,QAAOwB,GAAKA,EAAEnB,OAAOC,KAAKmB,SAASlB,IACpD,CAbmCmB,CAC3BvC,EAAKO,kBAAkBC,MACvBY,IAGGoB,EAAAA,EAAAA,GAAU,CACbxC,UACGoC,GACL,C,iGCJN,UALiBK,IAASC,EAAAA,EAAAA,GAAc,CACtCtB,SAAU,cACPqB,IAKE,MAAME,EAAO,IAAM,gBAAC,IAAG,CAACtC,MAAM,iC","sources":["webpack://gatsby-starter-blog/./src/components/blogIndex.js","webpack://gatsby-starter-blog/./src/components/filteredIndex.js","webpack://gatsby-starter-blog/./src/pages/software.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    throw new Error(\"No posts found.\");\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.filter(post => !post.frontmatter.draft)\n          .map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n            const category = extractCategoryName(post.fields.slug)\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <Link to={category} className=\"category\">\n                      {category}\n                    </Link>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <small>{post.frontmatter.date}</small>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            )\n          })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nfunction extractCategoryName(slug) {\n  if (!slug || typeof slug !== \"string\" || slug.trim().length === 0) {\n    return null;\n  }\n  \n  return slug.split(\"/\")[1]\n}","import BlogIndex from \"../components/blogIndex\"\n\nconst FilteredIndex = ({ category, data, ...rest }) => {\n    if (!category) {\n        throw new Error(\"Missing category to filter by\")\n    }\n\n    data.allMarkdownRemark.nodes = filterPostsByCategory(\n        data.allMarkdownRemark.nodes,\n        category\n    )\n\n    return BlogIndex({\n        data,\n        ...rest\n    })\n}\n\nfunction filterPostsByCategory(posts, category) {\n    return posts.filter(p => p.fields.slug.includes(category))\n}\n\nexport default FilteredIndex","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Seo from \"../components/seo\"\nimport FilteredIndex from \"../components/filteredIndex\"\n\nconst Software = props => FilteredIndex({\n  category: \"software\",\n  ...props\n})\n\nexport default Software\n\nexport const Head = () => <Seo title=\"Desenvolupament de programari\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"DD MMMM YYYY\", locale: \"ca\")\n          title\n          description,\n          draft\n        }\n      }\n    }\n  }\n`"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","Error","style","listStyle","filter","post","frontmatter","draft","map","fields","slug","category","trim","split","extractCategoryName","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","rest","p","includes","filterPostsByCategory","BlogIndex","props","FilteredIndex","Head"],"sourceRoot":""}